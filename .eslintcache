[{"C:\\Users\\10delpiero\\coastraldune\\src\\index.js":"1","C:\\Users\\10delpiero\\coastraldune\\src\\components\\App.js":"2","C:\\Users\\10delpiero\\coastraldune\\src\\components\\Router.js":"3","C:\\Users\\10delpiero\\coastraldune\\src\\fbase.js":"4","C:\\Users\\10delpiero\\coastraldune\\src\\components\\DunesExpedition.js":"5","C:\\Users\\10delpiero\\coastraldune\\src\\components\\Explain.js":"6","C:\\Users\\10delpiero\\coastraldune\\src\\components\\Diary.js":"7","C:\\Users\\10delpiero\\coastraldune\\src\\components\\Navigation.js":"8","C:\\Users\\10delpiero\\coastraldune\\src\\routes\\Auth.js":"9","C:\\Users\\10delpiero\\coastraldune\\src\\routes\\Home.js":"10","C:\\Users\\10delpiero\\coastraldune\\src\\routes\\Profile.js":"11","C:\\Users\\10delpiero\\coastraldune\\src\\components\\Slide.js":"12","C:\\Users\\10delpiero\\coastraldune\\src\\components\\Nweet.js":"13","C:\\Users\\10delpiero\\coastraldune\\src\\components\\NweetFactory.js":"14","C:\\Users\\10delpiero\\coastraldune\\src\\components\\AuthForm.js":"15"},{"size":244,"mtime":1606994135155,"results":"16","hashOfConfig":"17"},{"size":1090,"mtime":1604377214044,"results":"18","hashOfConfig":"17"},{"size":1780,"mtime":1606477644118,"results":"19","hashOfConfig":"17"},{"size":744,"mtime":1607050361417,"results":"20","hashOfConfig":"17"},{"size":7002,"mtime":1606804855870,"results":"21","hashOfConfig":"17"},{"size":2774,"mtime":1606548583304,"results":"22","hashOfConfig":"17"},{"size":1545,"mtime":1606801441870,"results":"23","hashOfConfig":"17"},{"size":2866,"mtime":1606010296260,"results":"24","hashOfConfig":"17"},{"size":1671,"mtime":1606139747210,"results":"25","hashOfConfig":"17"},{"size":2509,"mtime":1606145255162,"results":"26","hashOfConfig":"17"},{"size":1951,"mtime":1606706203438,"results":"27","hashOfConfig":"17"},{"size":217,"mtime":1606478286789,"results":"28","hashOfConfig":"17"},{"size":2623,"mtime":1605358075112,"results":"29","hashOfConfig":"17"},{"size":3011,"mtime":1606738516740,"results":"30","hashOfConfig":"17"},{"size":1973,"mtime":1606548474807,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1daa76l",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\10delpiero\\coastraldune\\src\\index.js",[],["73","74"],"C:\\Users\\10delpiero\\coastraldune\\src\\components\\App.js",[],"C:\\Users\\10delpiero\\coastraldune\\src\\components\\Router.js",[],"C:\\Users\\10delpiero\\coastraldune\\src\\fbase.js",[],"C:\\Users\\10delpiero\\coastraldune\\src\\components\\DunesExpedition.js",["75","76","77","78"],"import * as tmImage from '@teachablemachine/image';\r\nimport React, {useState} from 'react';\r\nimport icon6 from \"../components/icons/icon6.jpg\";\r\nimport Empty from \"../components/icons/empty.jpg\";\r\nimport $ from 'jquery';\r\nwindow.$ = $;\r\n\r\n\r\n\r\nconst DunesExpedition = () => {\r\n  \r\n  const [imgBase64, setImgBase64] = useState(Empty); // 파일 base64\r\n  const [imgFile, setImgFile] = useState(null);\t//파일\t\r\n  \r\n  const handleChangeFile = (event) => {\r\n    let reader = new FileReader();\r\n\r\n    reader.onloadend = () => {\r\n      // 2. 읽기가 완료되면 아래코드가 실행됩니다.\r\n      const base64 = reader.result;\r\n      if (base64) {\r\n        setImgBase64(base64.toString()); // 파일 base64 상태 업데이트\r\n      }\r\n    }\r\n    if (event.target.files[0]) {\r\n      reader.readAsDataURL(event.target.files[0]); // 1. 파일을 읽어 버퍼에 저장합니다.\r\n      setImgFile(event.target.files[0]); // 파일 상태 업데이트\r\n    }\r\n  }\r\n\r\n  \r\n      const URL = \"https://teachablemachine.withgoogle.com/models/wY73i_ESl/\";\r\n  \r\n      let model, labelContainer, maxPredictions, Message, Messagetwo;\r\n      Message = \"AI가 사구식물을 찾는 중 입니다.\"\r\n      Messagetwo = \"\"\r\n\r\n      \r\n      // Load the image model and setup the webcam\r\n      async function init() {\r\n        $('.Message').html(Message)\r\n          const modelURL = URL + \"model.json\";\r\n          const metadataURL = URL + \"metadata.json\";\r\n          // load the model and metadata\r\n          // Refer to tmImage.loadFromFiles() in the API to support files from a file picker\r\n          // or files from your local hard drive\r\n          // Note: the pose library adds \"tmImage\" object to your window (window.tmImage)\r\n          model = await tmImage.load(modelURL, metadataURL);\r\n          maxPredictions = model.getTotalClasses();\r\n  \r\n          // Convenience function to setup a webcam\r\n\r\n  \r\n          labelContainer = document.getElementById(\"label-container\");\r\n          for (let i = 0; i < maxPredictions; i++) { // and class labels\r\n            var element = document.createElement(\"div\")\r\n            element.classList.add(\"d-flex\");\r\n              labelContainer.appendChild(element);\r\n          }\r\n      }\r\n  \r\n  \r\n      // run the webcam image through the image model\r\n      async function predict() {\r\n          // predict can take in an image, video or canvas html element\r\n          const modelURL = URL + \"model.json\";\r\n          const metadataURL = URL + \"metadata.json\";\r\n          model = await tmImage.load(modelURL, metadataURL);\r\n          maxPredictions = model.getTotalClasses();\r\n          var imageUp = document.getElementById(\"goimage\")\r\n          const prediction = await model.predict(imageUp, false);\r\n          prediction.sort((a,b)=> parseFloat(b.probability) - parseFloat(a.probability));\r\n          var resultMessege;\r\n          switch(prediction[0].className){\r\n            case \"mae\":\r\n              resultMessege = \"이 식물은 갯메꽃과 일치할 확률이 \" + Math.round(prediction[0].probability.toFixed(2) * 100) + \"% 입니다.\"\r\n              break;\r\n            case \"tong\":\r\n              resultMessege = \"이 식물은 통보리사초와 일치할 확률이 \" + Math.round(prediction[0].probability.toFixed(2) * 100) + \"% 입니다.\"\r\n              break;\r\n            case \"reed\":\r\n              resultMessege = \"이 식물은 갈대와 일치할 확률이 \" + Math.round(prediction[0].probability.toFixed(2) * 100) + \"% 입니다.\"\r\n              break;\r\n            case \"zom\":\r\n              resultMessege = \"이 식물은 좀보리사초와 일치할 확률이 \" + Math.round(prediction[0].probability.toFixed(2) * 100) + \"% 입니다.\"\r\n              break;\r\n            case \"haedanghwa\":\r\n              resultMessege = \"이 식물은 해당화와 일치할 확률이 \" + Math.round(prediction[0].probability.toFixed(2) * 100) + \"% 입니다.\"\r\n              break;\r\n            case \"bigi\":\r\n              resultMessege = \"이 식물은 순비기나무와 일치할 확률이 \" + Math.round(prediction[0].probability.toFixed(2) * 100) + \"% 입니다.\"\r\n              break;\r\n          };\r\n          $('.result-message').html(resultMessege) \r\n          var barWidth;\r\n          for (let i = 0; i < maxPredictions; i++) {\r\n              if (prediction[i].probability.toFixed(2) > 0.1) {\r\n                  barWidth = Math.round(prediction[i].probability.toFixed(2) * 100) + \"%\";\r\n              } else if (prediction[i].probability.toFixed(2) >= 0.01) {\r\n                  barWidth = \"4%\"\r\n              } else {\r\n                  barWidth = \"2%\"\r\n              } \r\n            var labelTitle;\r\n                switch (prediction[i].className) {\r\n                    case \"mae\":\r\n                        labelTitle = \"갯메꽃\"\r\n                        break;\r\n                    case \"tong\":\r\n                        labelTitle = \"통보리사초\"\r\n                        break;\r\n                    case \"reed\":\r\n                        labelTitle = \"갈대\"\r\n                        break;\r\n                    case \"zom\":\r\n                        labelTitle = \"좀보리사초\"\r\n                        break;\r\n                    case \"haedanghwa\":\r\n                        labelTitle = \"해당화\"\r\n                        break;\r\n                    case \"bigi\":\r\n                        labelTitle = \"순비기나무\"\r\n                        break;\r\n                }\r\n                $('.Message').html(Messagetwo)\r\n          var label = \"<div class='animal-label d-flex'>\" + labelTitle + \"</div>\"\r\n          var bar = \"<div class='bar-container'><div class='\" + prediction[i].className + \"-box'></div><div class='d-flex \" + prediction[i].className + \"-bar' style='width: \" + barWidth + \"'><span class='percent-text'>\" + Math.round(prediction[i].probability.toFixed(2) * 100) + \"%</span></div></div>\"\r\n                    labelContainer.childNodes[i].innerHTML = label + bar;\r\n      }\r\n    }\r\nreturn(\r\n<div>\r\n<div className=\"page\">\r\n        <div className=\"pageTitleBack\">\r\n          <div className=\"pageTitle\">\r\n            <div className=\"in\">\r\n              <div style={{float: \"left\"}}><img width=\"100px\" height=\"100px\" src={icon6}></img></div>\r\n              <div style={{float: \"left\", textAlign:\"center\", marginTop:\"40px\"}}>사구 식물 검색하기</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n<div className=\"preview\">\r\n      <div><p class=\"Message\"></p></div>\r\n      <div><p class=\"result-message\"></p></div>\r\n            <div className=\"imgFileContainer\">\r\n      <img className=\"goimage\" id=\"goimage\" src={imgBase64}>\r\n      </img>\r\n        <input type=\"file\" name=\"imgFile\" id=\"imgFile\" onChange={handleChangeFile} onclick=           \r\n          {\r\n            imgFile === null\r\n            ? null\r\n            : init().then(predict())\r\n          }/>\r\n      </div>\r\n    </div>\r\n  <div id=\"label-container\" class=\"d-flex\"></div>\r\n  </div>\r\n);\r\n}\r\n\r\n\r\nexport default DunesExpedition;","C:\\Users\\10delpiero\\coastraldune\\src\\components\\Explain.js",["79","80"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport Slide from \"./Slide\";\r\nimport styled from \"styled-components\";\r\nimport icon7 from \"../components/icons/icon7.jpg\";\r\nimport img1 from \"../components/imgs/1.jpg\"\r\nimport img2 from \"../components/imgs/2.jpg\"\r\nimport img3 from \"../components/imgs/3.jpg\"\r\nimport img4 from \"../components/imgs/4.jpg\"\r\nimport img5 from \"../components/imgs/5.jpg\"\r\nimport img6 from \"../components/imgs/6.jpg\"\r\nimport img7 from \"../components/imgs/7.jpg\"\r\nimport img8 from \"../components/imgs/8.jpg\"\r\nimport img9 from \"../components/imgs/9.jpg\"\r\nimport img10 from \"../components/imgs/10.jpg\"\r\n\r\nconst IMG = styled.img`\r\n  width: 100%;\r\n  height: 70vh;\r\n`;\r\nconst exContainer = styled.div`\r\n  width: 60%;\r\n  overflow: hidden; \r\n`;\r\nconst Button = styled.button`\r\n  all: unset;\r\n  border: 1px solid white;\r\n  padding: 0.5em 2em;\r\n  color: white;\r\n  border-radius: 10px;\r\n  &:hover {\r\n    transition: all 0.3s ease-in-out;\r\n    background-color: white;\r\n    color: #5ed1a1;\r\n  }\r\n`;\r\nconst SliderContainer = styled.div`\r\n  width: 100%;\r\n  display: flex; \r\n`;\r\n\r\nconst TOTAL_SLIDES = 9;\r\nexport default function Slider() {\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  const slideRef = useRef(null);\r\nconst nextSlide = () => {\r\n    if (currentSlide >= TOTAL_SLIDES) { \r\n      setCurrentSlide(0);\r\n    } else {\r\n      setCurrentSlide(currentSlide + 1);\r\n    }\r\n  };\r\n  const prevSlide = () => {\r\n    if (currentSlide === 0) {\r\n      setCurrentSlide(TOTAL_SLIDES);\r\n    } else {\r\n      setCurrentSlide(currentSlide - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    slideRef.current.style.transition = \"all 0.5s ease-in-out\";\r\n    slideRef.current.style.transform = `translateX(-${currentSlide}00%)`;\r\n  }, [currentSlide]);\r\nreturn (\r\n<div>\r\n    <div className=\"pageTitleBack\">\r\n        <div className=\"pageTitle\">\r\n            <div className=\"in\">\r\n                <div style={{float: \"left\"}}><img width=\"100px\" height=\"100px\" src={icon7}></img></div>\r\n                <div style={{float: \"left\", textAlign:\"center\", marginTop:\"40px\"}}>사구 식물 공부하기</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div>\r\n    <exContainer style={{float: \"left\", textAlign:\"center\", marginTop:\"40px\"}}>\r\n      <SliderContainer ref={slideRef}>\r\n        <Slide img={img1} />\r\n        <Slide img={img2} />\r\n        <Slide img={img3} />\r\n        <Slide img={img4} />\r\n        <Slide img={img5} />\r\n        <Slide img={img6} />\r\n        <Slide img={img7} />\r\n        <Slide img={img8} />\r\n        <Slide img={img9} />\r\n        <Slide img={img10} />\r\n      </SliderContainer>\r\n      <Button onClick={prevSlide}>이전</Button>\r\n      <Button onClick={nextSlide}>다음</Button>\r\n    </exContainer>\r\n    </div>\r\n</div>\r\n  );\r\n}","C:\\Users\\10delpiero\\coastraldune\\src\\components\\Diary.js",["81"],"import React, {useEffect, useState} from \"react\";\r\nimport { dbService } from \"../fbase\";\r\nimport Nweet from \"../components/Nweet\";\r\nimport NweetFactory from \"../components/NweetFactory\";\r\nimport icon5 from \"../components/icons/icon5.jpg\";\r\n\r\n\r\n\r\nconst Diary =  ({userObj}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").orderBy('createdAt', \"desc\").onSnapshot(snapshot => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id:doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    }, [])\r\n    \r\n    return(\r\n      <div className=\"page\">\r\n        <div className=\"pageTitleBack\">\r\n          <div className=\"pageTitle\">\r\n            <div className=\"in\">\r\n              <div style={{float: \"left\"}}><img width=\"100px\" height=\"100px\" src={icon5}></img></div>\r\n              <div style={{float: \"left\", textAlign:\"center\", marginTop:\"40px\"}}>사구 식물 관찰 기록장</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"pageExplain\">나의 관찰기록 등록하기</div>\r\n        <div className=\"container\">\r\n          <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30, height: 40}}>\r\n                {nweets.map(nweet => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\nexport default Diary;","C:\\Users\\10delpiero\\coastraldune\\src\\components\\Navigation.js",["82","83"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faComment } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCameraRetro } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faStore } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\r\n\r\nconst Navigation = ( {userObj} ) => (\r\n  <div>\r\n  { <Route path='../routes/Home'/>\r\n    ? null\r\n    :\r\n<nav>\r\n    <ul style={{display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n        <Link to=\"/\" style={{ \r\n          marginRight: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,}}>\r\n          <FontAwesomeIcon icon={faComment} color={\"#505050\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>홈</span>\r\n        </Link>\r\n        </li>\r\n        <li>\r\n        <Link to=\"/diary\" style={{ \r\n          marginRight: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,}}>\r\n          <FontAwesomeIcon icon={faComment} color={\"#505050\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>홈</span>\r\n        </Link>\r\n        </li>\r\n        <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 20,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#505050\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}`\r\n              : \"프로필\"}\r\n          </span>\r\n        </Link>\r\n        </li>\r\n        <li>\r\n            <Link to =\"/DunesExpedition\" style={{ \r\n              marginLeft: 10, \r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}>\r\n            <FontAwesomeIcon icon={faCameraRetro} color={\"#505050\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>사구생물검색</span>\r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link to =\"/Explain\" style={{ \r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12, \r\n              }}>\r\n            <FontAwesomeIcon icon={faStore} color={\"#505050\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>사구지식</span>\r\n            </Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n            }\r\n</div>\r\n);\r\nexport default Navigation;","C:\\Users\\10delpiero\\coastraldune\\src\\routes\\Auth.js",["84"],"import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"../fbase\";\r\nimport AuthForm from \"../components/AuthForm\";\r\nimport Leaves from \"../components/leaves.jpg\"\r\n\r\nconst Auth= () => {\r\n    const onSocialClick = async (event) => {\r\n        const {\r\n            target: { name },\r\n        } = event;\r\n        let provider;\r\n        if(name === \"google\"){\r\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if (name === \"github\"){\r\n            provider = new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n        }; \r\n    return (\r\n        <div>\r\n            <div className=\"titleback\">\r\n                <div className=\"titleImage\"><img width=\"50px\" height=\"70px\" src={Leaves}></img></div>\r\n                <div className=\"title\">\r\n                    <p>해안사구</p>\r\n                    <p>식물</p>\r\n                </div>\r\n                <div className=\"title-sub\">이야기</div>\r\n            </div>\r\n        <div className=\"authContainer\">\r\n        <AuthForm />\r\n        <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          구글로 가입하기 <FontAwesomeIcon icon={faGoogle} /> </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          깃허브로 가입하기 <FontAwesomeIcon icon={faGithub} /> </button>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","C:\\Users\\10delpiero\\coastraldune\\src\\routes\\Home.js",["85","86","87","88","89"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport icon1 from \"../components/icons/icon1.jpg\"\r\nimport icon2 from \"../components/icons/icon2.jpg\"\r\nimport icon3 from \"../components/icons/icon3.jpg\"\r\nimport icon4 from \"../components/icons/icon4.jpg\"\r\nimport Leaves from \"../components/leaves.jpg\"\r\n\r\nconst Navigation = ( {userObj} ) => (\r\n<div className=\"homeNav\" style={{  width: \"100%\", height: \"100%\",\r\nmarginTop: \"-90px\",\r\n  padding: \"0px\",\r\n  border: \"0px\" }}>\r\n  <div className=\"titleback\">\r\n    <div className=\"titleImage\"><img width=\"50px\" height=\"70px\" src={Leaves}></img></div>\r\n    <div className=\"title\">\r\n      <p>해안사구</p>\r\n      <p>식물</p>\r\n    </div>\r\n    <div className=\"title-sub\">이야기</div>\r\n  </div>\r\n  <div style={{ paddingTop: 10, textAlign: \"center\"}}>\r\n    <span>\r\n          {userObj.displayName\r\n            ? `${userObj.displayName}님 환영합니다.`\r\n            : \"프로필\"}\r\n    </span>\r\n  </div>\r\n  <div>\r\n  <nav>\r\n  <ul>\r\n    <div style={{display: \"flex\", justifyContent: \"center\", marginTop: 20, width: \"100%\"}}>\r\n    <li>\r\n      <Link \r\n        to=\"/diary\" \r\n        style={{ \r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          margin:\"10px\"\r\n          }}>\r\n        <img src={icon1} width=\"130px\" height=\"200px\"></img>\r\n      </Link>\r\n      </li>\r\n      <li>\r\n      <Link \r\n        to =\"/DunesExpedition\" \r\n        style={{ \r\n          margin:\"10px\", \r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          }}>\r\n          <img src={icon2} width=\"130px\" height=\"200px\"></img>\r\n      </Link>\r\n      </li>\r\n      </div>\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 10, marginBottom: 10, width: \"100%\" }}>\r\n      <li>\r\n        <Link \r\n          to =\"/Explain\" \r\n          style={{ \r\n            margin: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            }}>\r\n          <img src={icon3} width=\"130px\" height=\"200px\"></img>\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n        to=\"/profile\"\r\n        style={{\r\n          margin: 10,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\"\r\n          }}>\r\n        <img src={icon4} width=\"130px\" height=\"200px\"></img>\r\n      </Link>\r\n      </li>\r\n      </div>\r\n    </ul>\r\n  </nav>\r\n</div>\r\n</div>\r\n);\r\nexport default Navigation;","C:\\Users\\10delpiero\\coastraldune\\src\\routes\\Profile.js",["90","91","92"],"import React, { useState } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { authService } from \"../fbase\";\r\nimport icon8 from \"../components/icons/icon8.jpg\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n};\r\n    const onChange = (event) => {\r\n        const {\r\n          target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n      };\r\n      const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n          await userObj.updateProfile({\r\n            displayName: newDisplayName,\r\n          });\r\n          refreshUser();\r\n          history.push(\"/\");\r\n        }\r\n      };\r\n\r\n    return(\r\n    <div className=\"container\">\r\n      <div className=\"pageTitleBack\">\r\n        <div className=\"pageTitle\">\r\n            <div className=\"in\">\r\n                <div style={{float: \"left\"}}><img width=\"100px\" height=\"100px\" src={icon8}></img></div>\r\n                <div style={{float: \"left\", textAlign:\"center\", marginTop:\"40px\"}}>나의 프로필</div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n      <form onSubmit={onSubmit} className=\"profileForm\">        \r\n      <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"프로필을 적어주세요.\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"프로필 바꾸기\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        로그아웃\r\n      </span>\r\n    </div>\r\n    );\r\n};","C:\\Users\\10delpiero\\coastraldune\\src\\components\\Slide.js",[],"C:\\Users\\10delpiero\\coastraldune\\src\\components\\Nweet.js",["93"],"import { dbService, storageService } from \"../fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj, isOwner }) => { \r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"정말 삭제하겠습니까?\");\r\n            if (ok) {\r\n                await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n            }    \r\n        };\r\n        const toggleEditing = () => setEditing((prev) => !prev);\r\n        const onSubmit = async(event) => {\r\n            event.preventDefault();\r\n            await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n                text:newNweet\r\n            });\r\n            setEditing(false);\r\n        };\r\n        const onChange = (event) => {\r\n            const {\r\n                target: {value},\r\n            } = event;\r\n            setNewNweet(value);\r\n        };\r\n        return (\r\n            <div className=\"nweet\">\r\n                {editing ? (\r\n                    <>\r\n                <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                    <input type=\"text\" placeholder=\"수정할 내용을 적으세요.\" value ={ newNweet } required               \r\n                    autoFocus\r\n                    onChange={onChange}\r\n                    className=\"formInput\"\r\n                    /> \r\n                <input type=\"submit\" value=\"수정\" className=\"formBtn\" />\r\n                </form> \r\n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                    취소\r\n                </span>\r\n                    </>\r\n                    ):( \r\n                    <>\r\n                    {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {isOwner && (\r\n                    <div class=\"nweet__actions\">\r\n                    <span onClick={onDeleteClick}>\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </span>\r\n                    <span onClick={toggleEditing}>\r\n                      <FontAwesomeIcon icon={faPencilAlt} />\r\n                    </span>\r\n                    </div>\r\n                    )}\r\n                    </>\r\n                    )}\r\n            </div>\r\n            );\r\n        };\r\n\r\nexport default Nweet;","C:\\Users\\10delpiero\\coastraldune\\src\\components\\NweetFactory.js",["94"],"import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"../fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faCameraRetro } from \"@fortawesome/free-solid-svg-icons\";\r\nimport $ from 'jquery';\r\nwindow.$ = $;\r\n\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n        return;\r\n      }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    await dbService.collection(\"nweets\").orderBy('createdAt', \"desc\");\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\" >\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>사진 추가</span>\r\n        <FontAwesomeIcon icon={faCameraRetro} size=\"3x\"/>\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>삭제</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"factoryInput__container\">\r\n        <textarea\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"내용을 작성하세요.\"\r\n          maxLength={120}\r\n          />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;","C:\\Users\\10delpiero\\coastraldune\\src\\components\\AuthForm.js",[],["95","96"],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":74,"column":11,"nodeType":"103","messageId":"104","endLine":93,"endColumn":12},{"ruleId":"101","severity":1,"message":"102","line":105,"column":17,"nodeType":"103","messageId":"104","endLine":124,"endColumn":18},{"ruleId":"105","severity":1,"message":"106","line":137,"column":44,"nodeType":"107","endLine":137,"endColumn":90},{"ruleId":"105","severity":1,"message":"106","line":147,"column":7,"nodeType":"107","endLine":147,"endColumn":61},{"ruleId":"108","severity":1,"message":"109","line":16,"column":7,"nodeType":"110","messageId":"111","endLine":16,"endColumn":10},{"ruleId":"105","severity":1,"message":"106","line":69,"column":46,"nodeType":"107","endLine":69,"endColumn":92},{"ruleId":"105","severity":1,"message":"106","line":26,"column":44,"nodeType":"107","endLine":26,"endColumn":90},{"ruleId":"108","severity":1,"message":"112","line":8,"column":23,"nodeType":"110","messageId":"111","endLine":8,"endColumn":29},{"ruleId":"108","severity":1,"message":"113","line":8,"column":38,"nodeType":"110","messageId":"111","endLine":8,"endColumn":44},{"ruleId":"105","severity":1,"message":"106","line":27,"column":45,"nodeType":"107","endLine":27,"endColumn":90},{"ruleId":"105","severity":1,"message":"106","line":15,"column":33,"nodeType":"107","endLine":15,"endColumn":78},{"ruleId":"105","severity":1,"message":"106","line":42,"column":9,"nodeType":"107","endLine":42,"endColumn":55},{"ruleId":"105","severity":1,"message":"106","line":54,"column":11,"nodeType":"107","endLine":54,"endColumn":57},{"ruleId":"105","severity":1,"message":"106","line":69,"column":11,"nodeType":"107","endLine":69,"endColumn":57},{"ruleId":"105","severity":1,"message":"106","line":81,"column":9,"nodeType":"107","endLine":81,"endColumn":55},{"ruleId":"108","severity":1,"message":"114","line":2,"column":22,"nodeType":"110","messageId":"111","endLine":2,"endColumn":26},{"ruleId":"115","severity":1,"message":"116","line":6,"column":1,"nodeType":"117","endLine":64,"endColumn":3},{"ruleId":"105","severity":1,"message":"106","line":35,"column":46,"nodeType":"107","endLine":35,"endColumn":92},{"ruleId":"105","severity":1,"message":"106","line":48,"column":48,"nodeType":"107","endLine":48,"endColumn":84},{"ruleId":"105","severity":1,"message":"106","line":75,"column":11,"nodeType":"107","endLine":80,"endColumn":13},{"ruleId":"97","replacedBy":"118"},{"ruleId":"99","replacedBy":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'IMG' is assigned a value but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["120"],["121"],"no-global-assign","no-unsafe-negation"]